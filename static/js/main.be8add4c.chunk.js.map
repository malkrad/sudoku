{"version":3,"sources":["Cell.js","Subgrid.js","SudokuBoard.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["Cell","props","handleClick","bind","this","idx","className","immutable","focused","wrongCell","causingError","hint","onClick","num","Component","SubGrid","cellClicked","cell","cells","map","key","String","focusedCell","wrongCells","hints","defaultProps","Array","fill","SudokuBoard","focusedSubgrid","subgrids","subgrid","undefined","solved","Game","state","setFocus","changeCell","clearBoard","solve","handleKeyDown","setState","value","newCells","evt","isNaN","parseInt","handleNumberDown","includes","handleArrowDown","checkConflicts","arrow","moveLeft","moveRight","moveUp","moveDown","Math","floor","block","getBlock","row","getRow","col","getCol","wrongs","filter","x","length","subgridPos","slice","cellPos","s","concat","_","toCheck","findWrongCellsInBlock","findWrongCellsInRow","findWrongCellsInCol","cellValue","subIdx","cellIdx","forEach","checkCell","status","findWrongCells","c","document","addEventListener","removeEventListener","originalCells","solveNext","result","alert","nextEmptyCell","solutions","cellSolutions","solution","findLonelyCells","foundLonelyCells","lonelyCells","findLonelyValues","foundLonelyValues","lonelyValues","hintsFound","countedSolutions","id","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be8add4c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Cell.css';\r\n\r\nexport class Cell extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\r\n\thandleClick() {\r\n\t\tthis.props.handleClick(this.props.idx);\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet className = 'Cell';\r\n\t\tif (this.props.immutable) className += ' immutable';\r\n\t\telse className += ' mutable';\r\n\t\tif (this.props.focused) className += ' focused';\r\n\t\tif (this.props.wrongCell) className += ' wrongCell';\r\n\t\tif (this.props.causingError) className += ' causingError';\r\n\t\tif (this.props.hint) className += ' hint';\r\n\t\treturn (\r\n\t\t\t<div className={className} onClick={this.handleClick}>\r\n\t\t\t\t{this.props.num !== 0 ? this.props.num : ''}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Cell;\r\n","import React, { Component } from 'react';\r\nimport './Subgrid.css';\r\nimport Cell from './Cell';\r\n\r\nexport class SubGrid extends Component {\r\n\tstatic defaultProps = {\r\n\t\tcells: new Array(9).fill(0)\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.cellClicked = this.cellClicked.bind(this);\r\n\t}\r\n\r\n\tcellClicked(cell) {\r\n\t\tthis.props.handleClick(this.props.idx, cell);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst cells = this.props.cells.map((cell, idx) => (\r\n\t\t\t<Cell\r\n\t\t\t\tidx={idx}\r\n\t\t\t\tkey={String(this.props.idx) + '-' + String(idx)}\r\n\t\t\t\tnum={cell}\r\n\t\t\t\thandleClick={this.cellClicked}\r\n\t\t\t\tfocused={this.props.focusedCell === idx}\r\n\t\t\t\twrongCell={this.props.wrongCells[idx]}\r\n\t\t\t\tcausingError={this.props.causingError[idx]}\r\n\t\t\t\timmutable={this.props.immutable[idx]}\r\n\t\t\t\thint={this.props.hints[idx]}\r\n\t\t\t/>\r\n\t\t));\r\n\t\treturn <div className=\"Subgrid\">{cells}</div>;\r\n\t}\r\n}\r\n\r\nexport default SubGrid;\r\n","import React, { Component } from 'react';\r\nimport Subgrid from './Subgrid';\r\nimport './SudokuBoard.css';\r\n\r\nexport class SudokuBoard extends Component {\r\n\tstatic defaultProps = {\r\n\t\tsubgrids: new Array(9).fill(new Array(9).fill(0))\r\n\t};\r\n\trender() {\r\n\t\tlet focusedSubgrid, focusedCell;\r\n\t\tif (this.props.focusedCell) {\r\n\t\t\t[ focusedSubgrid, focusedCell ] = this.props.focusedCell;\r\n\t\t}\r\n\t\tconst subgrids = this.props.subgrids.map((subgrid, idx) => (\r\n\t\t\t<Subgrid\r\n\t\t\t\tidx={idx}\r\n\t\t\t\tkey={idx}\r\n\t\t\t\tcells={subgrid}\r\n\t\t\t\thandleClick={this.props.handleClick}\r\n\t\t\t\tfocusedCell={focusedSubgrid === idx ? focusedCell : undefined}\r\n\t\t\t\twrongCells={this.props.wrongCells[idx]}\r\n\t\t\t\tcausingError={this.props.causingError[idx]}\r\n\t\t\t\timmutable={this.props.immutable[idx]}\r\n\t\t\t\thints={this.props.hints[idx]}\r\n\t\t\t/>\r\n\t\t));\r\n\t\tlet className = 'SudokuBoard';\r\n\t\tthis.props.solved ? (className += ' solved') : (className += ' unsolved');\r\n\t\treturn <div className={className}>{subgrids}</div>;\r\n\t}\r\n}\r\n\r\nexport default SudokuBoard;\r\n","import React, { Component } from 'react';\r\nimport SudokuBoard from './SudokuBoard';\r\n\r\nexport class Game extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcells: [\r\n\t\t\t\t[ 2, 6, 0, 0, 0, 0, 0, 0, 0 ],\r\n\t\t\t\t[ 5, 0, 0, 0, 0, 1, 0, 0, 0 ],\r\n\t\t\t\t[ 0, 1, 0, 8, 0, 0, 4, 2, 0 ],\r\n\t\t\t\t[ 0, 9, 4, 0, 3, 0, 0, 0, 6 ],\r\n\t\t\t\t[ 1, 0, 0, 8, 4, 0, 0, 0, 0 ],\r\n\t\t\t\t[ 0, 0, 0, 2, 5, 0, 0, 0, 0 ],\r\n\t\t\t\t[ 0, 0, 0, 3, 0, 2, 0, 0, 5 ],\r\n\t\t\t\t[ 7, 0, 0, 0, 0, 8, 0, 0, 6 ],\r\n\t\t\t\t[ 0, 0, 8, 0, 0, 0, 0, 0, 0 ]\r\n\t\t\t],\r\n\t\t\thints: new Array(9).fill(new Array(9).fill(false)),\r\n\t\t\timmutable: new Array(9).fill(new Array(9).fill(false)),\r\n\t\t\twrongCells: new Array(9).fill(new Array(9).fill(false)),\r\n\t\t\tcausingError: new Array(9).fill(new Array(9).fill(false)),\r\n\t\t\tfocusedCell: undefined,\r\n\t\t\tsolved: false\r\n\t\t};\r\n\t\tthis.setFocus = this.setFocus.bind(this);\r\n\t\tthis.changeCell = this.changeCell.bind(this);\r\n\t\tthis.clearBoard = this.clearBoard.bind(this);\r\n\t\tthis.hint = this.hint.bind(this);\r\n\t\tthis.solve = this.solve.bind(this);\r\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\r\n\t}\r\n\r\n\tsetFocus(subgrid, cell) {\r\n\t\tif (!this.state.immutable[subgrid][cell]) {\r\n\t\t\tthis.setState({ focusedCell: [ subgrid, cell ] });\r\n\t\t}\r\n\t}\r\n\r\n\tchangeCell(value, subgrid, cell) {\r\n\t\tif (!this.state.immutable[subgrid][cell]) {\r\n\t\t\tlet newCells = this.state.cells;\r\n\t\t\tnewCells[subgrid][cell] = value;\r\n\t\t\tthis.setState({ cells: newCells });\r\n\t\t}\r\n\t}\r\n\r\n\thandleKeyDown(evt) {\r\n\t\t// Both parseInt and isNan are used to avoid Spacebar Key\r\n\t\t// Since it can't be catched by isNan on its own.\r\n\t\tconst key = evt.key;\r\n\t\tconst arrows = [ 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown' ];\r\n\t\tif (this.state.focusedCell && !isNaN(parseInt(key))) {\r\n\t\t\tthis.handleNumberDown(parseInt(evt.key));\r\n\t\t} else if (arrows.includes(key)) {\r\n\t\t\tthis.handleArrowDown(key);\r\n\t\t}\r\n\t}\r\n\r\n\thandleNumberDown(value) {\r\n\t\t// Both parseInt and isNan are used to avoid Spacebar Key\r\n\t\t// Since it can't be catched by isNan on its own.\r\n\t\tthis.changeCell(value, ...this.state.focusedCell);\r\n\t\tthis.checkConflicts(...this.state.focusedCell);\r\n\t}\r\n\r\n\thandleArrowDown(arrow) {\r\n\t\tlet subgrid, cell;\r\n\t\tif (this.state.focusedCell) {\r\n\t\t\t[ subgrid, cell ] = this.state.focusedCell;\r\n\t\t\tswitch (arrow) {\r\n\t\t\t\tcase 'ArrowLeft':\r\n\t\t\t\t\t[ subgrid, cell ] = this.moveLeft(subgrid, cell);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ArrowRight':\r\n\t\t\t\t\t[ subgrid, cell ] = this.moveRight(subgrid, cell);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ArrowUp':\r\n\t\t\t\t\t[ subgrid, cell ] = this.moveUp(subgrid, cell);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ArrowDown':\r\n\t\t\t\t\t[ subgrid, cell ] = this.moveDown(subgrid, cell);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t[ subgrid, cell ] = [ 0, 0 ];\r\n\t\t}\r\n\t\tthis.setState({ focusedCell: [ subgrid, cell ] });\r\n\t}\r\n\r\n\tmoveLeft(subgrid, cell) {\r\n\t\tif (cell % 3 !== 0) {\r\n\t\t\tcell--;\r\n\t\t} else if (subgrid % 3 !== 0) {\r\n\t\t\tcell += 2;\r\n\t\t\tsubgrid--;\r\n\t\t}\r\n\t\treturn [ subgrid, cell ];\r\n\t}\r\n\r\n\tmoveRight(subgrid, cell) {\r\n\t\tif (cell % 3 !== 2) {\r\n\t\t\tcell++;\r\n\t\t} else if (subgrid % 3 !== 2) {\r\n\t\t\tcell -= 2;\r\n\t\t\tsubgrid++;\r\n\t\t}\r\n\t\treturn [ subgrid, cell ];\r\n\t}\r\n\r\n\tmoveUp(subgrid, cell) {\r\n\t\tif (Math.floor(cell / 3) !== 0) {\r\n\t\t\tcell -= 3;\r\n\t\t} else if (Math.floor(subgrid / 3) !== 0) {\r\n\t\t\tcell += 6;\r\n\t\t\tsubgrid -= 3;\r\n\t\t}\r\n\t\treturn [ subgrid, cell ];\r\n\t}\r\n\r\n\tmoveDown(subgrid, cell) {\r\n\t\tif (Math.floor(cell / 3) !== 2) {\r\n\t\t\tcell += 3;\r\n\t\t} else if (Math.floor(subgrid / 3) !== 2) {\r\n\t\t\tcell -= 6;\r\n\t\t\tsubgrid += 3;\r\n\t\t}\r\n\t\treturn [ subgrid, cell ];\r\n\t}\r\n\r\n\tcheckCell(subgrid, cell) {\r\n\t\tconst value = this.state.cells[subgrid][cell];\r\n\t\tconst block = this.getBlock(subgrid, this.state.cells);\r\n\t\tconst row = this.getRow(subgrid, cell, this.state.cells);\r\n\t\tconst col = this.getCol(subgrid, cell, this.state.cells);\r\n\t\tlet wrongs = { block: false, row: false, col: false };\r\n\t\tif (block.filter((x) => x === value).length >= 2) {\r\n\t\t\twrongs.block = true;\r\n\t\t}\r\n\t\tif (row.filter((x) => x === value).length >= 2) {\r\n\t\t\twrongs.row = true;\r\n\t\t}\r\n\t\tif (col.filter((x) => x === value).length >= 2) {\r\n\t\t\twrongs.col = true;\r\n\t\t}\r\n\t\treturn [ wrongs.block || wrongs.row || wrongs.col, wrongs ];\r\n\t}\r\n\r\n\tgetBlock(subgrid, cells) {\r\n\t\treturn cells[subgrid];\r\n\t}\r\n\r\n\tgetRow(subgrid, cell, cells) {\r\n\t\tconst subgridPos = Math.floor(subgrid / 3) * 3;\r\n\t\tconst subgrids = cells.slice(subgridPos, subgridPos + 3);\r\n\t\tconst cellPos = Math.floor(cell / 3) * 3;\r\n\t\tconst row = subgrids.map((s) => s.slice(cellPos, cellPos + 3));\r\n\t\treturn [].concat(...row);\r\n\t}\r\n\r\n\tgetCol(subgrid, cell, cells) {\r\n\t\tconst subgrids = cells.filter((_, idx) => idx % 3 === subgrid % 3);\r\n\t\tconst col = subgrids.map((s) => s.filter((_, idx) => idx % 3 === cell % 3));\r\n\t\treturn [].concat(...col);\r\n\t}\r\n\r\n\tfindWrongCells(value, subgrid, cell, toCheck, wrongCells, causingError) {\r\n\t\tif (toCheck.block) {\r\n\t\t\t[ wrongCells, causingError ] = this.findWrongCellsInBlock(value, subgrid, wrongCells, causingError);\r\n\t\t}\r\n\t\tif (toCheck.row) {\r\n\t\t\t[ wrongCells, causingError ] = this.findWrongCellsInRow(value, subgrid, cell, wrongCells, causingError);\r\n\t\t}\r\n\t\tif (toCheck.col) {\r\n\t\t\t[ wrongCells, causingError ] = this.findWrongCellsInCol(value, subgrid, cell, wrongCells, causingError);\r\n\t\t}\r\n\t\treturn [ wrongCells, causingError ];\r\n\t}\r\n\r\n\tfindWrongCellsInBlock(value, subgrid, wrongCells, causingError) {\r\n\t\twrongCells[subgrid] = new Array(9).fill(true);\r\n\t\tcausingError[subgrid] = causingError[subgrid].map(\r\n\t\t\t(cellValue, idx) => (this.state.cells[subgrid][idx] === value ? true : cellValue)\r\n\t\t);\r\n\t\treturn [ wrongCells, causingError ];\r\n\t}\r\n\r\n\tfindWrongCellsInRow(value, subgrid, cell, wrongCells, causingError) {\r\n\t\twrongCells = wrongCells.map(\r\n\t\t\t(s, idx) =>\r\n\t\t\t\tMath.floor(idx / 3) === Math.floor(subgrid / 3)\r\n\t\t\t\t\t? wrongCells[idx].map(\r\n\t\t\t\t\t\t\t(cellValue, idx) => (Math.floor(idx / 3) === Math.floor(cell / 3) ? true : cellValue)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t: s\r\n\t\t);\r\n\t\tcausingError = causingError.map(\r\n\t\t\t(s, subIdx) =>\r\n\t\t\t\tMath.floor(subIdx / 3) === Math.floor(subgrid / 3)\r\n\t\t\t\t\t? causingError[subIdx].map(\r\n\t\t\t\t\t\t\t(cellValue, cellIdx) =>\r\n\t\t\t\t\t\t\t\tMath.floor(cellIdx / 3) === Math.floor(cell / 3) &&\r\n\t\t\t\t\t\t\t\tthis.state.cells[subIdx][cellIdx] === value\r\n\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t: cellValue\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t: s\r\n\t\t);\r\n\t\treturn [ wrongCells, causingError ];\r\n\t}\r\n\r\n\tfindWrongCellsInCol(value, subgrid, cell, wrongCells, causingError) {\r\n\t\twrongCells = wrongCells.map(\r\n\t\t\t(s, idx) =>\r\n\t\t\t\tidx % 3 === subgrid % 3\r\n\t\t\t\t\t? wrongCells[idx].map((cellValue, idx) => (idx % 3 === cell % 3 ? true : cellValue))\r\n\t\t\t\t\t: s\r\n\t\t);\r\n\t\tcausingError = causingError.map(\r\n\t\t\t(s, subIdx) =>\r\n\t\t\t\tsubIdx % 3 === subgrid % 3\r\n\t\t\t\t\t? causingError[subIdx].map(\r\n\t\t\t\t\t\t\t(cellValue, cellIdx) =>\r\n\t\t\t\t\t\t\t\tcellIdx % 3 === cell % 3 && this.state.cells[subIdx][cellIdx] === value ? true : cellValue\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t: s\r\n\t\t);\r\n\t\treturn [ wrongCells, causingError ];\r\n\t}\r\n\r\n\tcheckConflicts() {\r\n\t\tlet { cells } = this.state;\r\n\t\tlet wrongCells = new Array(9).fill(new Array(9).fill(false));\r\n\t\tlet causingError = new Array(9).fill(new Array(9).fill(false));\r\n\t\tcells.forEach((subgrid, subIdx) =>\r\n\t\t\tsubgrid.forEach((cell, cellIdx) => {\r\n\t\t\t\tif (cell !== 0) {\r\n\t\t\t\t\tconst [ status, toCheck ] = this.checkCell(subIdx, cellIdx);\r\n\t\t\t\t\tif (status) {\r\n\t\t\t\t\t\t[ wrongCells, causingError ] = this.findWrongCells(\r\n\t\t\t\t\t\t\tcell,\r\n\t\t\t\t\t\t\tsubIdx,\r\n\t\t\t\t\t\t\tcellIdx,\r\n\t\t\t\t\t\t\ttoCheck,\r\n\t\t\t\t\t\t\twrongCells,\r\n\t\t\t\t\t\t\tcausingError\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\tthis.setState({ wrongCells: wrongCells, causingError: causingError });\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\timmutable: this.state.immutable.map((s, subIdx) =>\r\n\t\t\t\ts.map((c, cellIdx) => (this.state.cells[subIdx][cellIdx] ? true : false))\r\n\t\t\t)\r\n\t\t});\r\n\t\tdocument.addEventListener('keydown', this.handleKeyDown);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('keydown', this.handleKeyDown);\r\n\t}\r\n\r\n\tclearBoard() {\r\n\t\tthis.setState({\r\n\t\t\tcells: this.state.cells.map((s, subIdx) =>\r\n\t\t\t\ts.map((c, cellIdx) => (this.state.immutable[subIdx][cellIdx] ? c : 0))\r\n\t\t\t),\r\n\t\t\twrongCells: new Array(9).fill(new Array(9).fill(false)),\r\n\t\t\tcausingError: new Array(9).fill(new Array(9).fill(false)),\r\n\t\t\tsolved: false\r\n\t\t});\r\n\t}\r\n\r\n\tsolve() {\r\n\t\tconst originalCells = this.state.cells.map((subgrid, subIdx) =>\r\n\t\t\tsubgrid.map((cell, cellIdx) => (this.state.immutable[subIdx][cellIdx] ? cell : 0))\r\n\t\t);\r\n\t\tconst { result, cells } = this.solveNext(originalCells);\r\n\t\tif (result) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsolved: true,\r\n\t\t\t\tcells: cells,\r\n\t\t\t\twrongCells: new Array(9).fill(new Array(9).fill(false)),\r\n\t\t\t\tcausingError: new Array(9).fill(new Array(9).fill(false))\r\n\t\t\t});\r\n\t\t} else alert('Sorry, but something went wrong!');\r\n\t}\r\n\r\n\tsolveNext(cells) {\r\n\t\tconst nextEmptyCell = this.nextEmptyCell(cells);\r\n\t\tif (!nextEmptyCell) return { result: true, cells: cells };\r\n\t\tlet [ subgrid, cell ] = nextEmptyCell;\r\n\t\tconst solutions = this.cellSolutions(subgrid, cell, cells);\r\n\t\tif (!solutions.length) {\r\n\t\t\treturn { result: false, cells: cells };\r\n\t\t}\r\n\t\tfor (const solution of solutions) {\r\n\t\t\tcells[subgrid][cell] = solution;\r\n\t\t\tif (this.solveNext(cells).result) return { result: true, cells: cells };\r\n\t\t\tcells[subgrid][cell] = 0;\r\n\t\t}\r\n\t\treturn { result: false, cells: cells };\r\n\t}\r\n\r\n\tnextEmptyCell(cells) {\r\n\t\tfor (let subgrid = 0; subgrid < cells.length; subgrid++) {\r\n\t\t\tfor (let cell = 0; cell < cells[0].length; cell++) {\r\n\t\t\t\tif (cells[subgrid][cell] === 0) return [ subgrid, cell ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\thint() {\r\n\t\tconst [ foundLonelyCells, lonelyCells ] = this.findLonelyCells();\r\n\t\tconst [ foundLonelyValues, lonelyValues ] = this.findLonelyValues();\r\n\t\tlet hints = new Array(9).fill(new Array(9).fill(false));\r\n\t\thints = hints.map((subgrid, subIdx) =>\r\n\t\t\tsubgrid.map((cell, cellIdx) => lonelyCells[subIdx][cellIdx] || lonelyValues[subIdx][cellIdx])\r\n\t\t);\r\n\t\tif (foundLonelyCells || foundLonelyValues) {\r\n\t\t\tthis.setState({ hints: hints });\r\n\t\t} else {\r\n\t\t\talert('No direct solutions');\r\n\t\t}\r\n\t}\r\n\r\n\t// Cells that can only fit one value\r\n\t// according to the current values of the grid\r\n\tfindLonelyCells() {\r\n\t\tconst { cells, immutable, hints } = this.state;\r\n\t\tlet hintsFound = false;\r\n\t\tlet solution = cells.map((subgrid, subIdx) =>\r\n\t\t\tsubgrid.map(\r\n\t\t\t\t(cell, cellIdx) => (!immutable[subIdx][cellIdx] ? this.cellSolutions(subIdx, cellIdx, cells) : [])\r\n\t\t\t)\r\n\t\t);\r\n\t\tfor (let subgrid = 0; subgrid < solution.length; subgrid++) {\r\n\t\t\tfor (let cell = 0; cell < solution[subgrid].length; cell++) {\r\n\t\t\t\tif (solution[subgrid][cell].length === 1) {\r\n\t\t\t\t\thints[subgrid][cell] = true;\r\n\t\t\t\t\thintsFound = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [ hintsFound, hints ];\r\n\t}\r\n\r\n\t// Values that can be fit in one place in a block, row or col\r\n\t// according to the current values of the grid\r\n\tfindLonelyValues() {\r\n\t\tconst { cells, immutable, hints } = this.state;\r\n\t\tlet hintsFound = false;\r\n\t\tlet solution = cells.map((subgrid, subIdx) =>\r\n\t\t\tsubgrid.map(\r\n\t\t\t\t(cell, cellIdx) => (!immutable[subIdx][cellIdx] ? this.cellSolutions(subIdx, cellIdx, cells) : [])\r\n\t\t\t)\r\n\t\t);\r\n\t\tlet countedSolutions = new Array(9).fill(new Array(9).fill(0));\r\n\t\tsolution.forEach((subgrid, subIdx) =>\r\n\t\t\tsubgrid.forEach((cell, cellIdx) => (countedSolutions[subIdx][cell] += 1))\r\n\t\t);\r\n\t\t// TODO: find lonely values logic\r\n\t\treturn [ hintsFound, hints ];\r\n\t}\r\n\r\n\tcellSolutions(subgrid, cell, cells) {\r\n\t\tlet solutions = new Array(9).fill(0).map((_, idx) => idx + 1);\r\n\t\tconst block = this.getBlock(subgrid, cells);\r\n\t\tconst row = this.getRow(subgrid, cell, cells);\r\n\t\tconst col = this.getCol(subgrid, cell, cells);\r\n\t\tsolutions = solutions.filter((c) => !block.includes(c) && !row.includes(c) && !col.includes(c));\r\n\t\treturn solutions;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<h1 id=\"title\">Sudoku JS</h1>\r\n\t\t\t\t</header>\r\n\t\t\t\t<SudokuBoard\r\n\t\t\t\t\tsubgrids={this.state.cells}\r\n\t\t\t\t\thandleClick={this.setFocus}\r\n\t\t\t\t\tfocusedCell={this.state.focusedCell}\r\n\t\t\t\t\twrongCells={this.state.wrongCells}\r\n\t\t\t\t\tcausingError={this.state.causingError}\r\n\t\t\t\t\timmutable={this.state.immutable}\r\n\t\t\t\t\thints={this.state.hints}\r\n\t\t\t\t\tsolved={this.state.solved}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"HelperButtonsContainer\">\r\n\t\t\t\t\t<button className=\"HelperButton\" onClick={this.clearBoard}>\r\n\t\t\t\t\t\tClear\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{/* <button className=\"HelperButton\" onClick={this.hint}>\r\n\t\t\t\t\t\tHint\r\n\t\t\t\t\t</button> */}\r\n\t\t\t\t\t<button className=\"HelperButton\" onClick={this.solve}>\r\n\t\t\t\t\t\tSolve!\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport Game from './Game';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Game />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}